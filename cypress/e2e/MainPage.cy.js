describe('Display Header on page load and 2 pokemon', () => {
  beforeEach(() => {
    cy.mockAPI()
    cy.visit('http://localhost:3000?itemsperpage=2')
  })

  it('Should display PokeDeck', () => {
    cy.get('header').should('be.visible')
      .get('header').should('contain', 'PokÃ©Deck')
  })

  it('Should display generation and deck button', () => {
    cy.get('h1').should('be.visible')
      .get('h1').should('contain', 'Generation One')
    cy.get('h2').should('be.visible')
      .get('h2').should('contain', 'View Deck')
  })

  it('Should display page turner with 2 pages on top and bottom', () => {
    cy.get('.pages-top').children('.prev-button')
      .should('contain', 'Previous')
      .should('have.prop', 'disabled', true)
    cy.get('.pages-top').children('.page-total')
      .should('contain', 'Page 1 of 2')
    cy.get('.pages-top').children('.next-button')
      .should('contain', 'Next')
    cy.get('.pages-bot').children('.prev-button')
      .should('contain', 'Previous')
    cy.get('.pages-bot').children('.page-total')
      .should('contain', 'Page 1 of 2')
    cy.get('.pages-bot').children('.next-button')
      .should('contain', 'Next')
      .should('have.prop', 'disabled', false)
  })

  it('Should display two pokemon cards', () => {
    cy.get('.pokemon-display').children()
      .should('have.length', 2)
    cy.get('.pokemon-display').children()
      .first().should('contain', 'bulbasaur')
    cy.get('.pokemon-display').children().first()
    .find('img').should('have.attr', 'src').and('include', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png')
    cy.get('.pokemon-display').children()
      .first().should('contain', 'grass')
    cy.get('.pokemon-display').children()
      .first().should('contain', 'poison')
    cy.get('.pokemon-display').children()
      .first().should('contain', 'Add to Deck')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'ivysaur')
    cy.get('.pokemon-display').children().last()
      .find('img').should('have.attr', 'src').and('include', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'grass')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'poison')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'Add to Deck')
  })

  it('Should display two different cards on next click', () => {
    cy.get('.pages-top').children('.next-button').click()
    cy.get('.pokemon-display').children()
      .should('have.length', 2)
    cy.get('.pokemon-display').children()
      .first().should('contain', 'venasaur')
      cy.get('.pokemon-display').children().first()
      .find('img').should('have.attr', 'src').and('include', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png')
    cy.get('.pokemon-display').children()
      .first().should('contain', 'grass')
    cy.get('.pokemon-display').children()
      .first().should('contain', 'poison')
    cy.get('.pokemon-display').children()
      .first().should('contain', 'Add to Deck')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'charmander')
    cy.get('.pokemon-display').children().last()
      .find('img').should('have.attr', 'src').and('include', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/4.png')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'fire')
    cy.get('.pokemon-display').children()
      .last().should('contain', 'Add to Deck')
  })

  it('Should be able to change between pages using both buttons', () => {
    cy.get('.pages-top').children('.next-button').click()
    cy.get('.pages-top').children('.next-button').should('have.prop', 'disabled', true)
    cy.get('.pages-top').children('.prev-button').should('have.prop', 'disabled', false)
    cy.get('.pages-top').children('.prev-button').click()
    cy.get('.pages-bot').children('.next-button').click()
    cy.get('.pages-bot').children('.next-button').should('have.prop', 'disabled', true)
    cy.get('.pages-bot').children('.prev-button').should('have.prop', 'disabled', false)
    cy.get('.pages-bot').children('.prev-button').click()
  })
})